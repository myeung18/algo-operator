apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "cache.algo.com/v1alpha1",
          "kind": "AlgoCoding",
          "metadata": {
            "name": "algocoding-sample"
          },
          "spec": {
            "dbImage": "quay.io/bclaster/roar-db:1.0.2",
            "replicas": 1,
            "webImage": "quay.io/bclaster/roar-web:1.0.1"
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.6.1+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: algo-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: AlgoCoding is the Schema for the algocodings API
      displayName: Algo Coding
      kind: AlgoCoding
      name: algocodings.cache.algo.com
      specDescriptors:
      - displayName: DB image URL associated with the Web application
        path: dbImage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Number of Replicas (or pods)
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Web application image URL
        path: webImage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: the number of pod created
        displayName: Pod Size- here
        path: size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:Text
      version: v1alpha1
  description: Algo Coding Operator for coder
  displayName: Algocoding operator
  icon:
  - base64data: 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
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - cache.algo.com
          resources:
          - algocodings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - cache.algo.com
          resources:
          - algocodings/finalizers
          verbs:
          - update
        - apiGroups:
          - cache.algo.com
          resources:
          - algocodings/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: algo-operator-controller-manager
      deployments:
      - name: algo-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: quay.io/myeung/algo-operator:0.0.1
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 30Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: algo-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          - coordination.k8s.io
          resources:
          - configmaps
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: algo-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - coding
  - algo
  - leetcode
  links:
  - name: Algo Operator
    url: https://algo-operator.domain
  maturity: alpha
  provider:
    name: M. Y.
    url: www.leetcode.com/...
  version: 0.0.1
